# Generated by Django 2.0.7 on 2018-08-31 06:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserCount', models.IntegerField(default=0)),
                ('CommissionTotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('UserDeposit', models.IntegerField(default=0)),
                ('MoneyDeposit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('Status', models.IntegerField(choices=[(0, '正常'), (1, '待审核'), (2, '审核失败')], default=1)),
                ('AccountBalance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('PromotionCode', models.IntegerField(null=True)),
                ('ProxyCount', models.IntegerField(default=0)),
                ('PromotionURL', models.CharField(max_length=100, null=True)),
                ('Funds', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Google2Auth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=128, verbose_name='Google秘钥')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QuestionsNumber', models.IntegerField(db_index=True)),
                ('QuestionsTitle', models.CharField(max_length=256)),
                ('QuestionsText', models.TextField()),
                ('QuestionsTime', models.DateTimeField(auto_now_add=True)),
                ('QuestionsType', models.IntegerField(choices=[(0, '提问'), (1, '追问')], default=0)),
                ('IsReply', models.BooleanField(default=False)),
                ('ReplyTime', models.DateTimeField(null=True)),
                ('ReplyText', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlayUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Wallet', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('Assets', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('DepositTotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('WithdrawalTotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('Status', models.IntegerField(choices=[(0, '正常'), (1, '冻结'), (2, '账户异常')], default=0)),
                ('DepositCount', models.IntegerField(default=0)),
                ('isBool', models.BooleanField(default=True)),
                ('Proxy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proxyplayerusers', to='User.Agent', verbose_name='所属代理')),
            ],
        ),
        migrations.CreateModel(
            name='ReMomeyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupName', models.CharField(max_length=128, unique=True)),
                ('RegDate', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('comments', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='ReMoney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reName', models.CharField(max_length=64, verbose_name='方案名称')),
                ('investHightLim', models.BigIntegerField(default=999999999999, verbose_name='方案有效投注上限')),
                ('investLowerLim', models.BigIntegerField(default=0, verbose_name='方案有效投注下限')),
                ('availInvestCount', models.IntegerField(verbose_name='有效投注人数')),
                ('reRatio', models.FloatField(verbose_name='返佣比例')),
                ('comments', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
                ('RegDate', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('remomeygroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remomeygroups', to='User.ReMomeyGroup')),
            ],
        ),
        migrations.CreateModel(
            name='setRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegisterName', models.CharField(max_length=128, unique=True, verbose_name='分类')),
                ('ActualName', models.BooleanField(default=False, verbose_name='真实姓名')),
                ('mobile', models.BooleanField(default=False, verbose_name='手机号码')),
                ('email', models.BooleanField(default=False, verbose_name='邮箱')),
                ('QQ', models.BooleanField(default=False, verbose_name='QQ')),
                ('SafeQuestion', models.BooleanField(default=False, verbose_name='安全问题')),
                ('SafeReply', models.BooleanField(default=False, verbose_name='安全密码')),
                ('Language', models.BooleanField(default=False, verbose_name='主语言')),
                ('gender', models.BooleanField(default=False, verbose_name='性别')),
                ('birth', models.BooleanField(default=False, verbose_name='生日')),
                ('WeChat', models.BooleanField(default=False, verbose_name='微信')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Role', models.CharField(default='00001', max_length=16)),
                ('birth', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('ActualName', models.CharField(blank=True, max_length=20, null=True, verbose_name='真实姓名')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性别')),
                ('mobile', models.CharField(blank=True, help_text='电话号码', max_length=11, null=True, verbose_name='电话')),
                ('email', models.EmailField(blank=True, max_length=100, verbose_name='邮箱')),
                ('QQ', models.CharField(max_length=20, null=True, verbose_name='qq号码')),
                ('SafeQuestion', models.IntegerField(choices=[(0, '这是一个test'), (1, '这是一个test')], default=0, verbose_name='安全问题')),
                ('SafeReply', models.CharField(max_length=20, null=True, verbose_name='安全回答  ')),
                ('WeChat', models.CharField(max_length=50, null=True, verbose_name='微信号码')),
                ('BankCardNum', models.CharField(max_length=50, null=True, verbose_name='银行卡号')),
                ('LastLoginIpAddress', models.GenericIPAddressField(default='0.0.0.0', verbose_name='最后登录ip')),
                ('Language', models.IntegerField(choices=[(0, '简体中文')], default=0, verbose_name='语言')),
                ('LastLoginDate', models.DateTimeField(auto_now_add=True, null=True, verbose_name='最后登录时间')),
                ('RegDate', models.DateTimeField(auto_now_add=True, null=True, verbose_name='注册时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='playuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='playerusers', to=settings.AUTH_USER_MODEL, to_field='username'),
        ),
        migrations.AddField(
            model_name='playerquestions',
            name='JobUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Jobuser', to=settings.AUTH_USER_MODEL, verbose_name='工作人员'),
        ),
        migrations.AddField(
            model_name='playerquestions',
            name='UserName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Playuser', to=settings.AUTH_USER_MODEL, verbose_name='玩家账号'),
        ),
        migrations.AddField(
            model_name='google2auth',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agent',
            name='CommissionProgram',
            field=models.ForeignKey(max_length=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commissionprograms', to='User.ReMomeyGroup', verbose_name='返佣方案'),
        ),
        migrations.AddField(
            model_name='agent',
            name='Proxy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topagents', to='User.Agent', verbose_name='所属总代理'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='remoney',
            unique_together={('reName', 'remomeygroup')},
        ),
    ]
